type Query {
  partOfSpeech(input: PartOfSpeechInput!): PartOfSpeech
  allPartsOfSpeech: [PartOfSpeech]
}

type Mutation {
  createPartOfSpeech(input: CreatePartOfSpeechInput!): PartOfSpeech!
  updatePartOfSpeech(input: UpdatePartOfSpeechInput!): PartOfSpeech!
  deletePartOfSpeech(input: DeletePartOfSpeechInput!): Boolean!
}

type PartOfSpeech {
  id: String!
  name: String!
}

input PartOfSpeechInput {
  id: String!
}

input CreatePartOfSpeechInput {
  name: String!
}

input UpdatePartOfSpeechInput {
  id: String!
  payload: UpdatePartOfSpeechPayload!
}

input UpdatePartOfSpeechPayload {
  name: String!
}

input DeletePartOfSpeechInput {
  id: String!
}
