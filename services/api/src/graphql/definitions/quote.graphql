type Query {
  quote(input: QuoteInput!): Quote
  allQuotes: [Quote]
  quoteBySlug(input: QuoteBySlugInput!): Quote
}

type Mutation {
  createQuote(input: CreateQuoteInput!): Quote!
  updateQuote(input: UpdateQuoteInput!): Quote!
  deleteQuote(input: DeleteQuoteInput!): Boolean!
}

type Quote {
  id: String!
  name: String!
  slug: String!
  body: String!
  author: Author
  topics: [Topic]
  tones: [Tone]
  note: String
}

input QuoteInput {
  id: String!
}

input QuoteBySlugInput {
  slug: String!
}

input CreateQuoteInput {
  name: String!
  body: String!
  authorId: String!
  note: String
  topicIds: [String]
  toneIds: [String]
}

input UpdateQuoteInput {
  id: String!
  payload: UpdateQuotePayload!
}

input UpdateQuotePayload {
  name: String
  body: String
  authorId: String
  topicIds: [String]
  toneIds: [String]
  note: String
}

input DeleteQuoteInput {
  id: String!
}
